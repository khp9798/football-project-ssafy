name: CI Workflow for Spring Boot and Vue.js

# GitHub Actions 트리거 설정
on:
  push: # main 브랜치에 변경 사항이 푸시될 때 워크플로우 실행
    branches:
      - main
  pull_request: # main 브랜치로 PR이 생성될 때 워크플로우 실행
    branches:
      - main

# 작업(Job) 정의
jobs:
  backend: # 백엔드 관련 작업 정의
    name: Build and Test Spring Boot Backend
    runs-on: ubuntu-latest # Ubuntu 최신 버전의 환경에서 작업 실행

    services: # 백엔드에서 사용할 MySQL 서비스 정의
      mysql:
        image: mysql:8 # MySQL 8 버전의 Docker 이미지 사용
        ports:
          - 3306:3306 # MySQL 기본 포트 매핑
        env: # MySQL 환경 변수 설정
          MYSQL_ROOT_PASSWORD: root # MySQL 루트 비밀번호 설정
          MYSQL_DATABASE: testdb # 초기화할 데이터베이스 이름 설정
        options: >- # MySQL 컨테이너 상태 확인 옵션
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps: # 백엔드 작업의 단계 정의
      - name: Checkout Code # 저장소 코드 체크아웃
        uses: actions/checkout@v3 # GitHub Actions의 기본 checkout 작업 사용

      - name: Install MySQL Client # MySQL 클라이언트 설치
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Wait for MySQL to be ready # MySQL이 준비될 때까지 대기
        run: |
          until mysqladmin ping -h 127.0.0.1 -P 3306 --silent; do
            echo "Waiting for MySQL...";
            sleep 2;
          done

      - name: Apply SQL initialization script # 초기화 SQL 스크립트 실행
        env:
          MYSQL_PWD: root # MySQL 비밀번호 환경 변수로 설정
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root testdb < sql/football.sql

      - name: Set up JDK # Java 환경 설정
        uses: actions/setup-java@v3 # Java 설치를 위한 GitHub Actions 작업 사용
        with:
          java-version: '17' # Java 17 버전 사용
          working-directory: ./backend
          distribution: 'temurin' # OpenJDK의 Temurin 배포판 사용

      - name: Build and Test with Maven # Maven 빌드 및 테스트 실행
        run: mvn clean verify

  frontend: # 프론트엔드 관련 작업 정의
    name: Build Vue.js Frontend
    runs-on: ubuntu-latest # Ubuntu 최신 버전의 환경에서 작업 실행

    steps: # 프론트엔드 작업의 단계 정의
      - name: Checkout Code # 저장소 코드 체크아웃
        uses: actions/checkout@v3 # GitHub Actions의 기본 checkout 작업 사용

      - name: Set up Node.js # Node.js 환경 설정
        uses: actions/setup-node@v3 # Node.js 설치를 위한 GitHub Actions 작업 사용
        with:
          node-version: '18' # Node.js 18 버전 사용

      - name: Install and Build # Vue.js 의존성 설치 및 빌드 실행
        run: |
          npm install # 의존성 설치
          npm run build # Vue.js 프로젝트 빌드
        working-directory: ./frontend/football-ssafit # 프론트엔드 소스 코드가 위치한 디렉토리 지정

  deploy: # 배포 관련 작업 정의
    name: Deploy Backend and Frontend
    needs: [backend, frontend] # backend 및 frontend 작업 완료 후 실행
    runs-on: ubuntu-latest # Ubuntu 최신 버전의 환경에서 작업 실행

    steps: # 배포 작업의 단계 정의
      - name: Checkout Code # 저장소 코드 체크아웃
        uses: actions/checkout@v3 # GitHub Actions의 기본 checkout 작업 사용

      - name: Deploy Backend # 백엔드 배포 작업 (구체적인 명령어는 추가 필요)
        run: echo "Backend deployment step here..." # 배포 단계는 빈 Placeholder로 설정
